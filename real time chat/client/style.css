body {
  font-family: 'Segoe UI', sans-serif;
  background: #f0f2f5;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.form-wrapper, .chat-container {
  background: white;
  padding: 30px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  width: 300px;
}

input {
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 5px;
}

button {
  width: 100%;
  padding: 10px;
  background-color: #007bff;
  border: none;
  color: white;
  font-weight: bold;
  border-radius: 5px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 15px;
}

.messages {
  height: 300px;
  overflow-y: auto;
  border: 1px solid #ddd;
  padding: 10px;
  margin-bottom: 10px;
}

const usersList = document.getElementById('users-list');

const logout = () => {
  fetch('/api/logout').then(() => (window.location.href = '/login.html'));
};

const refreshUsers = async () => {
  const users = await fetch('/api/pending-users').then(r => r.json());
  usersList.innerHTML = '';

  if (!users.length) {
    usersList.textContent = 'No users awaiting approval.';
    return;
  }

  users.forEach(user => {
    const card = document.createElement('div');
    card.className = 'user-card';
    card.innerHTML = `
      <p><strong>${user.username}</strong></p>
      <button class="approve-btn">Approve</button>
      <button class="delete-btn">Delete</button>
    `;

    card.querySelector('.approve-btn').onclick = async () => {
      const res = await fetch(`/api/approve-user/${user._id}`, { method: 'PUT' });
      if (res.ok) {
        window.location.href = '/chat.html';
      } else {
        alert('Approval failed');
      }
    };

    card.querySelector('.delete-btn').onclick = async () => {
      const res = await fetch(`/api/delete-user/${user._id}`, { method: 'DELETE' });
      if (res.ok) {
        refreshUsers();
      } else {
        alert('Delete failed');
      }
    };

    usersList.appendChild(card);
  });
};

refreshUsers();
